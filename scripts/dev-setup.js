/**
 * Script de configuraci√≥n para desarrollo local
 * Ejecutar con: node scripts/dev-setup.js
 */

const fs = require('fs');
const path = require('path');

console.log('üöÄ Configurando entorno de desarrollo...\n');

// Verificar si existe .env.local
const envPath = path.join(process.cwd(), '.env.local');
if (!fs.existsSync(envPath)) {
  console.log('üìù Creando archivo .env.local...');
  
  const envContent = `# Variables de entorno para desarrollo local
# Copia los valores de env.example y configura tus claves

# Token de administrador (cambia por uno seguro)
ADMIN_TOKEN=dev_admin_token_123456789

# Cloudflare Turnstile (usa las claves de prueba)
TURNSTILE_SITE_KEY=0x4AAAAAAABkMYinukE8nz0
TURNSTILE_SECRET_KEY=0x4AAAAAAABkMYinukE8nz0_secret_key_aqui

# Para desarrollo local
NODE_ENV=development
`;
  
  fs.writeFileSync(envPath, envContent);
  console.log('‚úÖ Archivo .env.local creado');
} else {
  console.log('‚úÖ Archivo .env.local ya existe');
}

// Verificar dependencias
console.log('\nüì¶ Verificando dependencias...');
const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
const requiredDeps = [
  '@vercel/kv',
  '@upstash/redis',
  'nanoid',
  'ua-parser-js',
  'qrcode',
  'zod'
];

const missingDeps = requiredDeps.filter(dep => !packageJson.dependencies[dep]);
if (missingDeps.length > 0) {
  console.log('‚ùå Dependencias faltantes:', missingDeps.join(', '));
  console.log('üí° Ejecuta: npm install');
} else {
  console.log('‚úÖ Todas las dependencias est√°n instaladas');
}

// Verificar estructura de archivos
console.log('\nüìÅ Verificando estructura de archivos...');
const requiredFiles = [
  'package.json',
  'vercel.json',
  'src/lib/store.js',
  'src/lib/ua.js',
  'api/session.js',
  'api/links/index.js',
  'api/links/[slug].js',
  'api/links/[slug]/stats.js',
  'api/track.js',
  'api/redirect.js',
  'api/admin/login.js',
  'api/admin/links.js',
  'api/q/[slug].svg.js',
  'public/index.html',
  'public/admin/index.html',
  'public/styles.css'
];

const missingFiles = requiredFiles.filter(file => !fs.existsSync(file));
if (missingFiles.length > 0) {
  console.log('‚ùå Archivos faltantes:', missingFiles.join(', '));
} else {
  console.log('‚úÖ Todos los archivos est√°n presentes');
}

// Mostrar instrucciones
console.log('\nüéØ Pr√≥ximos pasos:');
console.log('1. Configura las variables de entorno en .env.local');
console.log('2. Ejecuta: npm run dev');
console.log('3. Abre http://localhost:3000 en tu navegador');
console.log('4. Para el panel admin, ve a http://localhost:3000/admin');

console.log('\nüîß Comandos √∫tiles:');
console.log('- npm run dev          # Ejecutar en modo desarrollo');
console.log('- vercel dev           # Ejecutar con Vercel CLI');
console.log('- vercel --prod        # Deploy a producci√≥n');

console.log('\nüìö Documentaci√≥n:');
console.log('- README.md            # Documentaci√≥n completa');
console.log('- env.example          # Ejemplo de variables de entorno');

console.log('\n‚ú® ¬°Configuraci√≥n completada!');
